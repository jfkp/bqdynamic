DECLARE SCALE STRING DEFAULT '10G';
DECLARE q1,q2,q3,q4,q5,q6,q7,q8,q9 merge_insert,merge_update,merge_sdelete,merge_xdelete,merge_mdelete,d_delete STRING;
DECLARE update_cols STRING;

SET update_cols = (
  SELECT STRING_AGG('a.' || column_name || ' = b.' || column_name)
  FROM `your_project.your_dataset.INFORMATION_SCHEMA.COLUMNS`
  WHERE table_name = CONCAT('store_sale_denorm_bench_', SCALE)
);


SET q2 = '''
    SELECT s.ca_state AS state, COUNT(*) AS cnt
    FROM store_sale_denorm_bench_''' || SCALE || ''' s
    WHERE s.d_month_seq = (
            SELECT DISTINCT d_month_seq
            FROM store_sale_denorm_bench_''' || SCALE || '''
            WHERE d_year = 2000 AND d_moy = 2
    )
    AND s.i_current_price > 1.2 * (
            SELECT AVG(j.i_current_price)
            FROM store_sale_denorm_bench_''' || SCALE || ''' j
            WHERE j.i_category = s.i_category
    )
    GROUP BY s.ca_state
    HAVING COUNT(*) >= 10
    ORDER BY cnt, s.ca_state
''';


SET q3 = '''
    SELECT i_item_id,
           AVG(ss_quantity)    AS agg1,
           AVG(ss_list_price)  AS agg2,
           AVG(ss_coupon_amt)  AS agg3,
           AVG(ss_sales_price) AS agg4
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE cd_gender = 'F'
      AND cd_marital_status = 'W'
      AND cd_education_status = 'Primary'
      AND (p_channel_email = 'N'
           OR p_channel_event = 'N')
      AND d_year = 1998
    GROUP BY i_item_id
    ORDER BY i_item_id
''';


SET q4 = '''
SELECT 
    CASE WHEN (SELECT COUNT(*) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 1 AND 20) > 48409437
         THEN (SELECT AVG(ss_ext_discount_amt) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 1 AND 20)
         ELSE (SELECT AVG(ss_net_profit) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 1 AND 20)
    END AS bucket1,
    
    CASE WHEN (SELECT COUNT(*) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 21 AND 40) > 24804257
         THEN (SELECT AVG(ss_ext_discount_amt) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 21 AND 40)
         ELSE (SELECT AVG(ss_net_profit) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 21 AND 40)
    END AS bucket2,
    
    CASE WHEN (SELECT COUNT(*) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 41 AND 60) > 128048939
         THEN (SELECT AVG(ss_ext_discount_amt) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 41 AND 60)
         ELSE (SELECT AVG(ss_net_profit) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 41 AND 60)
    END AS bucket3,
    
    CASE WHEN (SELECT COUNT(*) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 61 AND 80) > 56503968
         THEN (SELECT AVG(ss_ext_discount_amt) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 61 AND 80)
         ELSE (SELECT AVG(ss_net_profit) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 61 AND 80)
    END AS bucket4,
    
    CASE WHEN (SELECT COUNT(*) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 81 AND 100) > 43571537
         THEN (SELECT AVG(ss_ext_discount_amt) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 81 AND 100)
         ELSE (SELECT AVG(ss_net_profit) 
               FROM store_sale_denorm_bench_''' || SCALE || ''' 
               WHERE ss_quantity BETWEEN 81 AND 100)
    END AS bucket5
''';

SET q5 = '''
    SELECT 
        AVG(ss_quantity) AS avg_quantity,
        AVG(ss_ext_sales_price) AS avg_sales_price,
        AVG(ss_ext_wholesale_cost) AS avg_wholesale_cost,
        SUM(ss_ext_wholesale_cost) AS total_wholesale_cost
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE d_year = 2001
      AND (
            (cd_marital_status = 'D'
             AND cd_education_status = '2 yr Degree'
             AND ss_sales_price BETWEEN 100.00 AND 150.00
             AND hd_dep_count = 3)
          OR
            (cd_marital_status = 'S'
             AND cd_education_status = 'Secondary'
             AND ss_sales_price BETWEEN 50.00 AND 100.00
             AND hd_dep_count = 1)
          OR
            (cd_marital_status = 'W'
             AND cd_education_status = 'Advanced Degree'
             AND ss_sales_price BETWEEN 150.00 AND 200.00
             AND hd_dep_count = 1)
      )
      AND (
            (ca_country = 'United States'
             AND ca_state IN ('CO', 'IL', 'MN')
             AND ss_net_profit BETWEEN 100 AND 200)
          OR
            (ca_country = 'United States'
             AND ca_state IN ('OH', 'MT', 'NM')
             AND ss_net_profit BETWEEN 150 AND 300)
          OR
            (ca_country = 'United States'
             AND ca_state IN ('TX', 'MO', 'MI')
             AND ss_net_profit BETWEEN 50 AND 250)
      )
''';

SET q6 = '''
    SELECT 
        i_brand_id AS brand_id,
        i_brand AS brand,
        i_manufact_id,
        i_manufact,
        SUM(ss_ext_sales_price) AS ext_price
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE i_manager_id = 7
      AND d_moy = 11
      AND d_year = 1999
      AND SUBSTR(ca_zip, 1, 5) <> SUBSTR(s_zip, 1, 5)
    GROUP BY i_brand, i_brand_id, i_manufact_id, i_manufact
    ORDER BY ext_price DESC, i_brand, i_brand_id, i_manufact_id, i_manufact
''';

SET q7 = '''
    SELECT 
         i_item_id,
        s_state,
        GROUPING(s_state) AS g_state,
        AVG(ss_quantity) AS agg1,
        AVG(ss_list_price) AS agg2,
        AVG(ss_coupon_amt) AS agg3,
        AVG(ss_sales_price) AS agg4
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE cd_gender = 'F'
      AND cd_marital_status = 'M'
      AND cd_education_status = '4 yr Degree'
      AND d_year = 2002
      AND s_state IN ('NE', 'IN', 'SD', 'MN', 'TX', 'MN')
    GROUP BY ROLLUP(i_item_id, s_state)
    ORDER BY i_item_id, s_state
''';

SET q8 = '''
SELECT *
FROM (
    SELECT AVG(ss_list_price) AS B1_LP,
           COUNT(ss_list_price) AS B1_CNT,
           COUNT(DISTINCT ss_list_price) AS B1_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 0 AND 5
      AND (ss_list_price BETWEEN 11 AND 21
           OR ss_coupon_amt BETWEEN 460 AND 1460
           OR ss_wholesale_cost BETWEEN 14 AND 34)
) B1,
(
    SELECT AVG(ss_list_price) AS B2_LP,
           COUNT(ss_list_price) AS B2_CNT,
           COUNT(DISTINCT ss_list_price) AS B2_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 6 AND 10
      AND (ss_list_price BETWEEN 91 AND 101
           OR ss_coupon_amt BETWEEN 1430 AND 2430
           OR ss_wholesale_cost BETWEEN 32 AND 52)
) B2,
(
    SELECT AVG(ss_list_price) AS B3_LP,
           COUNT(ss_list_price) AS B3_CNT,
           COUNT(DISTINCT ss_list_price) AS B3_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 11 AND 15
      AND (ss_list_price BETWEEN 66 AND 76
           OR ss_coupon_amt BETWEEN 920 AND 1920
           OR ss_wholesale_cost BETWEEN 4 AND 24)
) B3,
(
    SELECT AVG(ss_list_price) AS B4_LP,
           COUNT(ss_list_price) AS B4_CNT,
           COUNT(DISTINCT ss_list_price) AS B4_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 16 AND 20
      AND (ss_list_price BETWEEN 142 AND 152
           OR ss_coupon_amt BETWEEN 3054 AND 4054
           OR ss_wholesale_cost BETWEEN 80 AND 100)
) B4,
(
    SELECT AVG(ss_list_price) AS B5_LP,
           COUNT(ss_list_price) AS B5_CNT,
           COUNT(DISTINCT ss_list_price) AS B5_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 21 AND 25
      AND (ss_list_price BETWEEN 135 AND 145
           OR ss_coupon_amt BETWEEN 14180 AND 15180
           OR ss_wholesale_cost BETWEEN 38 AND 58)
) B5,
(
    SELECT AVG(ss_list_price) AS B6_LP,
           COUNT(ss_list_price) AS B6_CNT,
           COUNT(DISTINCT ss_list_price) AS B6_CNTD
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE ss_quantity BETWEEN 26 AND 30
      AND (ss_list_price BETWEEN 28 AND 38
           OR ss_coupon_amt BETWEEN 2513 AND 3513
           OR ss_wholesale_cost BETWEEN 42 AND 62)
) B6
''';

SET q9 = '''
    SELECT 
        SUM(ss_net_profit) / SUM(ss_ext_sales_price) AS gross_margin,
        i_category,
        i_class,
        GROUPING(i_category) + GROUPING(i_class) AS lochierarchy,
        RANK() OVER (
            PARTITION BY GROUPING(i_category) + GROUPING(i_class),
                         CASE WHEN GROUPING(i_class) = 0 THEN i_category END
            ORDER BY SUM(ss_net_profit)/SUM(ss_ext_sales_price) ASC
        ) AS rank_within_parent
    FROM store_sale_denorm_bench_''' || SCALE || '''
    WHERE d_year = 1999
      AND s_state IN ('NE', 'IN', 'SD', 'MN', 'TX', 'MN', 'MI', 'LA')
    GROUP BY ROLLUP(i_category, i_class)
    ORDER BY lochierarchy DESC,
             CASE WHEN lochierarchy = 0 THEN i_category END,
             rank_within_parent
''';


SET merge_insert = '''
    MERGE INTO store_sale_denorm_bench_''' || SCALE || ''' AS a
    USING store_sales_denorm_insert_medium_''' || SCALE || ''' AS b
    ON a.ss_sold_date_sk = b.ss_sold_date_sk
       AND a.ss_item_sk = b.ss_item_sk
       AND a.ss_ticket_number = b.ss_ticket_number
    WHEN NOT MATCHED THEN
      INSERT ROW
''';

SET merge_update = '''
MERGE INTO store_sale_denorm_bench_''' || SCALE || ''' AS a
USING store_sales_denorm_upsert_''' || SCALE || ''' AS b
ON a.ss_sold_date_sk = b.ss_sold_date_sk
   AND a.ss_item_sk = b.ss_item_sk
   AND a.ss_ticket_number = b.ss_ticket_number
WHEN MATCHED THEN UPDATE SET ''' || update_cols;

SET merge_update = '''
    MERGE INTO store_sale_denorm_bench_''' || SCALE || ''' AS a
    USING store_sales_denorm_upsert_''' || SCALE || ''' AS b
    ON a.ss_sold_date_sk = b.ss_sold_date_sk
       AND a.ss_item_sk = b.ss_item_sk
       AND a.ss_ticket_number = b.ss_ticket_number
    WHEN MATCHED THEN UPDATE SET
        a.ss_sold_time_sk = b.ss_sold_time_sk,
        a.ss_item_sk = b.ss_item_sk,
        a.ss_customer_sk = b.ss_customer_sk,
        a.ss_cdemo_sk = b.ss_cdemo_sk,
        a.ss_hdemo_sk = b.ss_hdemo_sk,
        a.ss_addr_sk = b.ss_addr_sk,
        a.ss_store_sk = b.ss_store_sk,
        a.ss_promo_sk = b.ss_promo_sk,
        a.ss_ticket_number = b.ss_ticket_number,
        a.ss_quantity = b.ss_quantity,
        a.ss_wholesale_cost = b.ss_wholesale_cost,
        a.ss_list_price = b.ss_list_price,
        a.ss_sales_price = b.ss_sales_price,
        a.ss_ext_discount_amt = b.ss_ext_discount_amt,
        a.ss_ext_sales_price = b.ss_ext_sales_price,
        a.ss_ext_wholesale_cost = b.ss_ext_wholesale_cost,
        a.ss_ext_list_price = b.ss_ext_list_price,
        a.ss_ext_tax = b.ss_ext_tax,
        a.ss_coupon_amt = b.ss_coupon_amt,
        a.ss_net_paid = b.ss_net_paid,
        a.ss_net_paid_inc_tax = b.ss_net_paid_inc_tax,
        a.ss_net_profit = b.ss_net_profit,
        a.ss_sold_date_sk = b.ss_sold_date_sk,
        a.d_date_sk = b.d_date_sk,
        a.d_date_id = b.d_date_id,
        a.d_date = b.d_date,
        a.d_month_seq = b.d_month_seq,
        a.d_week_seq = b.d_week_seq,
        a.d_quarter_seq = b.d_quarter_seq,
        a.d_year = b.d_year,
        a.d_dow = b.d_dow,
        a.d_moy = b.d_moy,
        a.d_dom = b.d_dom,
        a.d_qoy = b.d_qoy,
        a.d_fy_year = b.d_fy_year,
        a.d_fy_quarter_seq = b.d_fy_quarter_seq,
        a.d_fy_week_seq = b.d_fy_week_seq,
        a.d_day_name = b.d_day_name,
        a.d_quarter_name = b.d_quarter_name,
        a.d_holiday = b.d_holiday,
        a.d_weekend = b.d_weekend,
        a.d_following_holiday = b.d_following_holiday,
        a.d_first_dom = b.d_first_dom,
        a.d_last_dom = b.d_last_dom,
        a.d_same_day_ly = b.d_same_day_ly,
        a.d_same_day_lq = b.d_same_day_lq,
        a.d_current_day = b.d_current_day,
        a.d_current_week = b.d_current_week,
        a.d_current_month = b.d_current_month,
        a.d_current_quarter = b.d_current_quarter,
        a.d_current_year = b.d_current_year,
        a.t_time_sk = b.t_time_sk,
        a.t_time_id = b.t_time_id,
        a.t_time = b.t_time,
        a.t_hour = b.t_hour,
        a.t_minute = b.t_minute,
        a.t_second = b.t_second,
        a.t_am_pm = b.t_am_pm,
        a.t_shift = b.t_shift,
        a.t_sub_shift = b.t_sub_shift,
        a.t_meal_time = b.t_meal_time,
        a.c_customer_sk = b.c_customer_sk,
        a.c_customer_id = b.c_customer_id,
        a.c_current_cdemo_sk = b.c_current_cdemo_sk,
        a.c_current_hdemo_sk = b.c_current_hdemo_sk,
        a.c_current_addr_sk = b.c_current_addr_sk,
        a.c_first_shipto_date_sk = b.c_first_shipto_date_sk,
        a.c_first_sales_date_sk = b.c_first_sales_date_sk,
        a.c_salutation = b.c_salutation,
        a.c_first_name = b.c_first_name,
        a.c_last_name = b.c_last_name,
        a.c_preferred_cust_flag = b.c_preferred_cust_flag,
        a.c_birth_day = b.c_birth_day,
        a.c_birth_month = b.c_birth_month,
        a.c_birth_year = b.c_birth_year,
        a.c_birth_country = b.c_birth_country,
        a.c_login = b.c_login,
        a.c_email_address = b.c_email_address,
        a.c_last_review_date = b.c_last_review_date,
        a.cd_demo_sk = b.cd_demo_sk,
        a.cd_gender = b.cd_gender,
        a.cd_marital_status = b.cd_marital_status,
        a.cd_education_status = b.cd_education_status,
        a.cd_purchase_estimate = b.cd_purchase_estimate,
        a.cd_credit_rating = b.cd_credit_rating,
        a.cd_dep_count = b.cd_dep_count,
        a.cd_dep_employed_count = b.cd_dep_employed_count,
        a.cd_dep_college_count = b.cd_dep_college_count,
        a.hd_demo_sk = b.hd_demo_sk,
        a.hd_income_band_sk = b.hd_income_band_sk,
        a.hd_buy_potential = b.hd_buy_potential,
        a.hd_dep_count = b.hd_dep_count,
        a.hd_vehicle_count = b.hd_vehicle_count,
        a.ca_address_sk = b.ca_address_sk,
        a.ca_address_id = b.ca_address_id,
        a.ca_street_number = b.ca_street_number,
        a.ca_street_name = b.ca_street_name,
        a.ca_street_type = b.ca_street_type,
        a.ca_suite_number = b.ca_suite_number,
        a.ca_city = b.ca_city,
        a.ca_county = b.ca_county,
        a.ca_state = b.ca_state,
        a.ca_zip = b.ca_zip,
        a.ca_country = b.ca_country,
        a.ca_gmt_offset = b.ca_gmt_offset,
        a.ca_location_type = b.ca_location_type,
        a.s_store_sk = b.s_store_sk,
        a.s_store_id = b.s_store_id,
        a.s_rec_start_date = b.s_rec_start_date,
        a.s_rec_end_date = b.s_rec_end_date,
        a.s_closed_date_sk = b.s_closed_date_sk,
        a.s_store_name = b.s_store_name,
        a.s_number_employees = b.s_number_employees,
        a.s_floor_space = b.s_floor_space,
        a.s_hours = b.s_hours,
        a.s_manager = b.s_manager,
        a.s_market_id = b.s_market_id,
        a.s_geography_class = b.s_geography_class,
        a.s_market_desc = b.s_market_desc,
        a.s_market_manager = b.s_market_manager,
        a.s_division_id = b.s_division_id,
        a.s_division_name = b.s_division_name,
        a.s_company_id = b.s_company_id,
        a.s_company_name = b.s_company_name,
        a.s_street_number = b.s_street_number,
        a.s_street_name = b.s_street_name,
        a.s_street_type = b.s_street_type,
        a.s_suite_number = b.s_suite_number,
        a.s_city = b.s_city,
        a.s_county = b.s_county,
        a.s_state = b.s_state,
        a.s_zip = b.s_zip,
        a.s_country = b.s_country,
        a.s_gmt_offset = b.s_gmt_offset,
        a.s_tax_precentage = b.s_tax_precentage,
        a.p_promo_sk = b.p_promo_sk,
        a.p_promo_id = b.p_promo_id,
        a.p_start_date_sk = b.p_start_date_sk,
        a.p_end_date_sk = b.p_end_date_sk,
        a.p_item_sk = b.p_item_sk,
        a.p_cost = b.p_cost,
        a.p_response_target = b.p_response_target,
        a.p_promo_name = b.p_promo_name,
        a.p_channel_dmail = b.p_channel_dmail,
        a.p_channel_email = b.p_channel_email,
        a.p_channel_catalog = b.p_channel_catalog,
        a.p_channel_tv = b.p_channel_tv,
        a.p_channel_radio = b.p_channel_radio,
        a.p_channel_press = b.p_channel_press,
        a.p_channel_event = b.p_channel_event,
        a.p_channel_demo = b.p_channel_demo,
        a.p_channel_details = b.p_channel_details,
        a.p_purpose = b.p_purpose,
        a.p_discount_active = b.p_discount_active,
        a.i_item_sk = b.i_item_sk,
        a.i_item_id = b.i_item_id,
        a.i_rec_start_date = b.i_rec_start_date,
        a.i_rec_end_date = b.i_rec_end_date,
        a.i_item_desc = b.i_item_desc,
        a.i_current_price = b.i_current_price,
        a.i_wholesale_cost = b.i_wholesale_cost,
        a.i_brand_id = b.i_brand_id,
        a.i_brand = b.i_brand,
        a.i_class_id = b.i_class_id,
        a.i_class = b.i_class,
        a.i_category_id = b.i_category_id,
        a.i_category = b.i_category,
        a.i_manufact_id = b.i_manufact_id,
        a.i_manufact = b.i_manufact,
        a.i_size = b.i_size,
        a.i_formulation = b.i_formulation,
        a.i_color = b.i_color,
        a.i_units = b.i_units,
        a.i_container = b.i_container,
        a.i_manager_id = b.i_manager_id,
        a.i_product_name = b.i_product_name
''';
