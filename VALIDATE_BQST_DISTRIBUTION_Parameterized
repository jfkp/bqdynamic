DECLARE PROJECT STRING DEFAULT 'cacib-lsdh-dev-df';
DECLARE REGION STRING DEFAULT 'europe-west9';
DECLARE DATASET STRING DEFAULT 'bq_ds_lsdh_dev_ew9_bench_bl_std';
DECLARE SCALE STRING DEFAULT '10G';
DECLARE duplicate_count INT64;

-- ===================
-- 1. Count duplicates dynamically
-- ===================
EXECUTE IMMEDIATE FORMAT("""
  SELECT COUNT(*)
  FROM (
    SELECT ss_sold_date_sk, ss_item_sk, ss_ticket_number, COUNT(*) AS dup_count
    FROM `%s.%s.%s.store_sales_denorm_start_%s`
    GROUP BY ss_sold_date_sk, ss_item_sk, ss_ticket_number
    HAVING COUNT(*) > 1
  )
""", PROJECT, REGION, DATASET, SCALE)
INTO duplicate_count;

-- ===================
-- 2. Conditional deduplication
-- ===================
IF duplicate_count > 0 THEN

  -- Step A: Deduplicate (keep all columns by grouping + ARRAY_AGG)
  EXECUTE IMMEDIATE FORMAT("""
    CREATE OR REPLACE TABLE `%s.%s.%s.store_sales_denorm_start_%s` AS
    SELECT ARRAY_AGG(t ORDER BY ss_sold_date_sk LIMIT 1)[OFFSET(0)] AS row_data
    FROM `%s.%s.%s.store_sales_denorm_start_%s` t
    GROUP BY ss_sold_date_sk, ss_item_sk, ss_ticket_number
  """, PROJECT, REGION, DATASET, SCALE,
     PROJECT, REGION, DATASET, SCALE);

  -- Step B: Flatten row_data back into full columns
  EXECUTE IMMEDIATE FORMAT("""
    CREATE OR REPLACE TABLE `%s.%s.%s.store_sales_denorm_start_%s` AS
    SELECT row_data.*
    FROM `%s.%s.%s.store_sales_denorm_start_%s`
  """, PROJECT, REGION, DATASET, SCALE,
     PROJECT, REGION, DATASET, SCALE);

  -- Step C: Create audit table (if not exists)
  EXECUTE IMMEDIATE FORMAT("""
    CREATE TABLE IF NOT EXISTS `%s.%s.%s.dedup_audit_%s` (
      run_timestamp TIMESTAMP,
      dataset STRING,
      scale STRING,
      original_count INT64,
      dedup_count INT64,
      duplicates_removed INT64
    )
  """, PROJECT, REGION, DATASET, SCALE);

  -- Step D: Insert audit record
  EXECUTE IMMEDIATE FORMAT("""
    INSERT INTO `%s.%s.%s.dedup_audit_%s`
    SELECT
      CURRENT_TIMESTAMP() AS run_timestamp,
      '%s' AS dataset,
      '%s' AS scale,
      orig.cnt AS original_count,
      dedup.cnt AS dedup_count,
      orig.cnt - dedup.cnt AS duplicates_removed
    FROM
      (SELECT COUNT(*) AS cnt FROM `%s.%s.%s.store_sales_denorm_start_%s`) orig,
      (SELECT COUNT(*) AS cnt FROM `%s.%s.%s.store_sales_denorm_start_%s`) dedup
  """, PROJECT, REGION, DATASET, SCALE,
       DATASET, SCALE,
       PROJECT, REGION, DATASET, SCALE,
       PROJECT, REGION, DATASET, SCALE);

ELSE
  -- ===================
  -- 3. No duplicates
  -- ===================
  SELECT "No duplicates found in " || DATASET || ".store_sales_denorm_start_" || SCALE AS message;
END IF;
