
DECLARE DATASET STRING DEFAULT 'bq_ds_lsdh_dev_ew9_bench_bl_std';
DECLARE SCALE STRING DEFAULT '10G';
DECLARE duplicate_count INT64;

-- ===================
-- 1. Count duplicates
-- ===================
SET duplicate_count = (
  SELECT COUNT(*)
  FROM (
    SELECT ss_sold_date_sk, ss_item_sk, ss_ticket_number, COUNT(*) AS dup_count
    FROM `cacib-lsdh-dev-df.` || DATASET || `.store_sales_denorm_start_` || SCALE
    GROUP BY ss_sold_date_sk, ss_item_sk, ss_ticket_number
    HAVING COUNT(*) > 1
  )
);

-- ===================
-- 2. Conditional execution
-- ===================
IF duplicate_count > 0 THEN

  -- Step A: Deduplicate rows
  EXECUTE IMMEDIATE FORMAT("""
  CREATE OR REPLACE TABLE `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s` AS
  SELECT ARRAY_AGG(t ORDER BY ss_sold_date_sk LIMIT 1)[OFFSET(0)] AS row_data
  FROM `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s` t
  GROUP BY ss_sold_date_sk, ss_item_sk, ss_ticket_number;
  """, DATASET, SCALE, DATASET, SCALE);

  -- Step B: Flatten row_data back to full column set
  EXECUTE IMMEDIATE FORMAT("""
  CREATE OR REPLACE TABLE `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s` AS
  SELECT row_data.*
  FROM `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s`;
  """, DATASET, SCALE, DATASET, SCALE);

  -- Step C: Create audit table if not exists
  EXECUTE IMMEDIATE FORMAT("""
  CREATE TABLE IF NOT EXISTS `cacib-lsdh-dev-df.%s.dedup_audit_%s` (
      run_timestamp TIMESTAMP,
      dataset STRING,
      scale STRING,
      original_count INT64,
      dedup_count INT64,
      duplicates_removed INT64
  );
  """, DATASET, SCALE);

  -- Step D: Insert audit record
  EXECUTE IMMEDIATE FORMAT("""
  INSERT INTO `cacib-lsdh-dev-df.%s.dedup_audit_%s`
  SELECT
    CURRENT_TIMESTAMP() AS run_timestamp,
    '%s' AS dataset,
    '%s' AS scale,
    orig.cnt AS original_count,
    dedup.cnt AS dedup_count,
    orig.cnt - dedup.cnt AS duplicates_removed
  FROM
    (SELECT COUNT(*) AS cnt FROM `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s`) orig,
    (SELECT COUNT(*) AS cnt FROM `cacib-lsdh-dev-df.%s.store_sales_denorm_start_%s`) dedup;
  """, DATASET, SCALE, DATASET, SCALE, DATASET, SCALE, DATASET, SCALE);

ELSE
  -- ===================
  -- 3. No duplicates found
  -- ===================
  SELECT "No duplicates found in " || DATASET || ".store_sales_denorm_start_" || SCALE AS message;
END IF;


-- query 0 row ok for upsert insert 
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_insert_medium_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssi.ss_ticket_number
    );

DELETE FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
WHERE EXISTS (
SELECT 1
FROM bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_insert_medium_10G ssi
WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
AND ssi.ss_item_sk = ssref.ss_item_sk
AND ssi.ss_ticket_number = ssi.ss_ticket_number
);


MERGE INTO `bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G` AS a
       USING `bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_insert_medium_10G` AS b
       ON a.ss_sold_date_sk = b.ss_sold_date_sk
       AND a.ss_item_sk = b.ss_item_sk
       AND a.ss_ticket_number = b.ss_ticket_number
       WHEN MATCHED THEN DELETE;
   
-- query 243365 row good for update merge
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_upsert_10G ;
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_upsert_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssref.ss_ticket_number
    );


-- query 2421 ok for x_small delete
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_delete_xsmall_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssref.ss_ticket_number
    );


-- query 25125 row good for small delete
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_delete_small_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssref.ss_ticket_number
    );


-- query 247274 ok for big delete 
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_delete_medium_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_start_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssref.ss_ticket_number
    );
-- query intersect small delete and medium only 2787 row good for the delete
SELECT count(*) FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_delete_medium_10G ssi
WHERE EXISTS (SELECT 1 
    FROM cacib-lsdh-dev-df.bq_ds_lsdh_dev_ew9_bench_bl_std.store_sales_denorm_delete_small_10G ssref
    WHERE ssi.ss_sold_date_sk = ssref.ss_sold_date_sk
    AND ssi.ss_item_sk = ssref.ss_item_sk
    AND ssi.ss_ticket_number = ssref.ss_ticket_number
    );

